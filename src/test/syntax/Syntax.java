package test.syntax; //определение пакета test

//Объявление класса Syntax
public class Syntax {

    //Статические(глобальные) переменные
    static public int global = 100; //переменная может быть изменена и вызвана в любом месте программы

    //Имена переменных в Java
    public static void testNames() {

        int TestInt, count, a3, my_number; //Допустимые имена переменных
        int $test, _my_init; //Допустимые, но не желательные имена переменных
        // int 2count, my-test, No/Yes - недопустимые имена переменных

        /* Cимвол доллара «$», по соглашению, никогда не используется вообще
           В соответствии с соглашением имя переменной должно начинаться именно с маленькой буквы
         */

        int Value = 25; //Объявление целочисленной переменной Value и присвоение ей значения 25
        int VALUE = 30; //Так как Java учитывает регистр символов, то это уже другая переменная

        System.out.println("Первое число: " + Value);
        System.out.println("Второе число: " + VALUE);

        //Константы
        final int constant = 333; //Константа объявляется также, как и переменная,
                                  // только вначале идет ключевое слово final
        // constant = 33; - Ошибка
    }

    //Примитивные типы Java
    public static void testTypes() {
        /*В Jаvа определены 8 примитивных типов данных: byte, short, int,
          long, char, float, double и boolean.
         */

        //Целые числа
        byte b;       //(целые числа, 1 байт, [-128, 127])
        short sh;     //(целые числа, 2 байта, [-32768, 32767])
        int i;        //(целые числа, 4 байта, [-2147483648, 2147483647])
        long l;       //(целые числа, 8 байт, [-922372036854775808,922372036854775807])

        //Вещественные числа
        float f;      //(вещественные числа, 4 байта)
        double d;     //(вещественные числа, 8 байт)

        //Символы
        char c;       //(символ Unicode, 2 байта, [0, 65536])

        //Логичиские
        boolean bool; //(значение истина/ложь, используется int, зависит от JVM) https://habrahabr.ru/post/76481/
    }

    //Преобразование типов
    public static void typeConverter(){
    /*Преобразование может быть неявным и явным (приведение типов).
      Неявное преобразование может выполняться если:
        - типы совместимы (например — оба целочисленные)
        - размер «принимающего» типа больше чем у того,
          который преобразуется (так называемое «преобразование с расширением»)

      Кратко можно записать такие правила:
        - byte, short, char в выражениях всегда повышаются до int
        - если в выражении участвует тип long — то именно к этому типу будет приведён результат
        - если в выражении участвует float — то результат приводится к float
        - если один из операндов имеет тип double — то к этому типу будет приведён весь результат
        - при выборе между длиной и возможностью сохранить дробную часть — будет выбрана дробная часть
     */

        //Неявное преобразование
        int a = 123454;
        double b =  a; //неявное преобразование - преобразование с расширением
        System.out.println("Преобразованное число b=" + b);

        //Явное преобразование
        int a0 = 64;
        int a1 = 257;
        int a2 = 126;
        int a3 = 129;
        byte b0 = (byte) a0;
        byte b1 = (byte) a1;
        byte b2 = (byte) a2;
        byte b3 = (byte) a3; //Тут происходит потеря данных
        System.out.println(b0+ " " + b1 + " " + b2 + " " + b3); //64 1 126 -127

        double c = 56.9876;
        int d = (int) c;
        System.out.println(d); //56

        long e = 1000L;
        float f = (float) e;
        System.out.println(f); //1000.0
    }
    public static void logicOperations(){

    }
}
